// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package users_repo

import (
	"context"
)

const getUsers = `-- name: GetUsers :many
SELECT username, email from human_resources.users
`

type GetUsersRow struct {
	Username string
	Email    string
}

func (q *Queries) GetUsers(ctx context.Context) ([]*GetUsersRow, error) {
	rows, err := q.db.Query(ctx, getUsers)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []*GetUsersRow
	for rows.Next() {
		var i GetUsersRow
		if err := rows.Scan(&i.Username, &i.Email); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
